{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///../node_modules/xhr/index.js","webpack:///../node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///../node_modules/xtend/immutable.js","webpack:///../node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///../node_modules/mux.js/lib/utils/bin.js","webpack:///../node_modules/mux.js/lib/utils/stream.js","webpack:///../node_modules/mux.js/lib/m2ts/probe.js","webpack:///../node_modules/videojs-vtt.js/lib/vtt.js","webpack:///../node_modules/parse-headers/parse-headers.js","webpack:///../node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///../node_modules/global/document.js","webpack:///../node_modules/is-function/index.js","webpack:///../node_modules/keycode/index.js","webpack:///../node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///../node_modules/safe-json-parse/tuple.js","webpack:///../node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///../node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///../node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///../node_modules/video.js/dist/video.es.js","webpack:///../node_modules/pkcs7/dist/pkcs7.es.js","webpack:///../node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///../node_modules/mux.js/lib/mp4/probe.js","webpack:///../node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///../node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///../node_modules/mux.js/lib/utils/clock.js","webpack:///../node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/mux.js/lib/aac/utils.js","webpack:///../node_modules/url-toolkit/src/url-toolkit.js","webpack:///../node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///../node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///../node_modules/global/window.js"],"names":["videoJsOptions","autoplay","controls","sources","playbackRates","userActions","hotkeys","event","which","this","paused","play","pause","duration","currentTime","lastDuration","Math","floor","volume","Home","videoRef","componentDidMount","player","videojs","console","log","props","observer","observe","document","querySelector","attributes","attributeFilter","componentDidUpdate","src","objectURL","type","componentWillUnmount","dispose","render","data-vjs-player","class","style","width","height","ref","className","disablePictureInPicture","kind","id","default","Component","initParams","uri","options","callback","params","isFunction","xtend","createXHR","_createXHR","getBody","body","undefined","xhr","response","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","e","errorFunc","evt","clearTimeout","timeoutTimer","Error","statusCode","failureResponse","loadFunc","aborted","status","err","useXDR","method","headers","url","rawRequest","getAllResponseHeaders","parseHeaders","key","called","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","hasOwnProperty","obj","i","isEmpty","beforeSend","send","window","require","module","exports","array","iterator","length","forEachArray","toUpperCase","inspectMp4","textifyMp4","parseType","parseMp4Date","seconds","Date","parseSampleFlags","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","nalParse","avcStream","avcView","DataView","buffer","byteOffset","byteLength","result","getUint32","push","avc1","view","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","depth","config","subarray","avcC","numOfPictureParameterSets","nalSize","offset","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","lengthSizeMinusOne","sps","pps","numOfSequenceParameterSets","Uint8Array","btrt","bufferSizeDB","maxBitrate","avgBitrate","esds","version","esId","streamPriority","decoderConfig","objectProfileIndication","streamType","bufferSize","decoderConfigDescriptor","tag","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","boxes","dref","dataReferences","hdlr","getUint8","handlerType","name","String","fromCharCode","decodeURIComponent","escape","mdat","nals","mdhd","language","creationTime","modificationTime","timescale","mdia","mfhd","sequenceNumber","minf","mp4a","channelcount","samplesize","samplerate","streamDescriptor","moof","moov","mvex","mvhd","rate","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","samples","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","entries","stts","timeToSamples","sampleCount","sampleDelta","styp","tfdt","baseMediaDecodeTime","pow","tfhd","trackId","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","tkhd","layer","alternateGroup","traf","trak","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","trun","sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","dataOffset","getInt32","size","compositionTimeOffset","vmhd","graphicsmode","opcolor","Uint16Array","inspect","end","box","ab","ArrayBuffer","v","z","textify","inspectedMp4","indent","Array","join","map","Object","keys","filter","prefix","value","bytes","prototype","slice","call","byte","toString","match","line","split","index","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","target","arguments","source","findAlignSetting","alignSetting","toLowerCase","VTTCue","startTime","endTime","text","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","defineProperties","enumerable","get","set","TypeError","setting","directionSetting","findDirectionSetting","SyntaxError","displayState","getCueAsHTML","WebVTT","convertCueToDOMTree","toUnsigned","toHexString","Stream","init","listeners","on","listener","concat","off","indexOf","splice","trigger","callbacks","args","apply","pipe","destination","flushSource","flush","partialFlush","endTimeline","reset","StreamTypes","parsePid","packet","pid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","pmtPid","parsePat","pusi","parsePmt","programMapTable","payloadOffset","tableEnd","parsePesType","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","parsePesTime","ptsDtsFlags","pes","pts","dts","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","ParsingError","errorData","message","parseTimeStamp","input","computeSeconds","h","m","s","f","replace","Settings","values","_objCreate","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","cue","regionList","consumeTimeStamp","ts","Errors","BadTimeStamp","oInput","skipWhitespace","substr","settings","k","region","alt","vals","vals0","integer","percent","vertical","lineAlign","snapToLines","align","position","start","left","middle","right","positionAlign","consumeCueSettings","parseContent","nextToken","unescape1","ESCAPE","unescape","shouldAdd","current","element","NEEDS_PARENT","localName","createElement","annotation","tagName","TAG_NAME","TAG_ANNOTATION","trim","t","rootDiv","tagStack","appendChild","createTextNode","pop","parentNode","node","createProcessingInstruction","isStrongRTLChar","charCode","strongRTLRanges","currentRange","determineBidi","cueDiv","pushNodes","nodeStack","childNodes","nextTextNode","textContent","innerText","charCodeAt","StyleBox","CueStyleBox","styleOptions","styles","color","backgroundColor","top","bottom","display","writingMode","unicodeBidi","applyStyles","div","direction","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetHeight","offsetWidth","offsetTop","rects","getClientRects","getBoundingClientRect","max","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","track","textTrackList","mediaElement","trackList","count","mode","computeLinePos","axis","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","b","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","p","intersectPercentage","findBestPosition","toCSSCompatValues","create","F","o","constructor","BadSignature","dflt","defaultKey","has","a","n","test","parseInt","parseFloat","c","u","ruby","rt","lang","prop","val","unit","toMove","overlaps","b2","container","min","reference","getSimpleBoxPosition","StringDecoder","decode","encodeURIComponent","cuetext","processCues","cues","overlay","firstChild","removeChild","paddedOverlay","margin","shouldCompute","fontSize","Parser","vttjs","decoder","state","TextDecoder","reportOrThrowError","onparsingerror","collectNextLine","self","pos","parseHeader","ontimestampmap","parseTimestampMap","xy","anchor","VTTRegion","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","stream","alreadyCollectedLine","hasSubstring","oncue","onflush","string","headersArr","row","isValidPercentValue","scrollSetting","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","doccy","topLevel","global","minDoc","fn","alert","confirm","prompt","keyCode","searchInput","hasKeyCode","names","foundNamedKey","search","codes","aliases","isEventKey","nameOrCode","title","alias","handleRollover","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","reviver","error","probe","aac","ONE_SECOND_IN_TS","parseAudioPes_","pmt","pesType","parsed","startIndex","endIndex","endLoop","table","audio","parseVideoPes_","frame","currentFrame","video","firstKeyFrame","shift","warn","inspectTs_","parsePsi_","baseTimestamp","isLikelyAacData","audioCount","sampleRate","timestamp","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","inspectAac_","segmentInfo","audioBaseTimestamp","forEach","info","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_extends","assign","_inheritsLoose","subClass","superClass","__proto__","decodeB64ToUint8Array","b64Text","decodedString","atob","each","object","_len","_key","isObject","isPlain","computedStyle","el","window$1","getComputedStyle","computedStyleValue","getPropertyValue","isNonBlankString","str","throwIfWhitespace","isReal","isEl","nodeType","isInFrame","parent","x","createQuerier","selector","context","ctx","createEl","properties","content","getOwnPropertyNames","propName","setAttribute","attrName","appendContent","prependTo","child","insertBefore","hasClass","classToCheck","classList","contains","RegExp","addClass","classToAdd","add","removeClass","classToRemove","remove","toggleClass","classToToggle","predicate","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","findPosition","docEl","pageYOffset","scrollTop","clientTop","pageXOffset","scrollLeft","clientLeft","getPointerPosition","boxW","boxH","boxX","pageY","pageX","changedTouches","y","isTextNode","emptyEl","normalizeContent","isArray","insertContent","isSingleLeftClick","button","buttons","autoSetupTimeout","wait","vjs","autoSetup","setWindowLoaded","_windowLoaded","removeEventListener","newGUID","_guid","_cleanUpEvents","elem","DomData","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","guid","hash","handlersCopy","addEventListener","_supportsPassive","passiveEvents","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","func","any","evented","eventBusKey","eventBusEl_","EventedMixin","eventedCallbacks","stateful","defaultState","StatefulMixin","handleStateChanged","isEvented","mergeOptions","_setPrototypeOf","setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","_construct","Parent","Class","instance","Function","bind","_assertThisInitialized","ReferenceError","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","isPromise","then","silencePromise","setSource","next","setSourceHelper","middleware","acc","lastRun","mwFactory","mwrest","middlewares","mw","mws","middlewareInstances","_mws$i","mwi","getOrCreateFactory","_src","mediate","tech","arg","callMethod","toTitleCase","middlewareValue","reduce","middlewareIterator","terminated","TERMINATOR","executeRight","fixSource","mimetype","getMimetype","constructColor","opacity","hex","tryUpdateStyle","rule","formatTime","guide","implementation","parseOptionValue","parser","videojs$1","ready","getPlayer","$","normalizeId","defaultView","hooks","hookFunction","opts","PlayerComponent","getComponent","shimWorker","filename","forceFallback","Worker","objURL","createSourceObject","TARGET","worker","term","terminate","URL","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","createObjectURL","Blob","blob","BlobBuilder","append","getBlob","noop","_proto","LineStream","_Stream","_this","nextNewline","substring","parseAttributes","attr","exec","ParseStream","customParsers","tagMappers","_this2","mapper","mappedLine","newLine","tagType","number","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","PRECISE","addParser","_ref","_this3","expression","customType","dataParser","segment","addTagMapper","_ref2","lineStream","parseStream","currentMap","uris","currentUri","defaultMediaGroups","currentTimeline","manifest","allowCache","discontinuityStarts","segments","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","KEYID","contentProtection","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","targetduration","targetDuration","totalduration","totalDuration","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","timeline","comment","custom","chunk","createClass","descriptor","configurable","writable","defineProperty","Constructor","protoProps","staticProps","aesTables","AES","tables","encTable","decTable","sbox","sboxInv","xInv","d","th","x2","x4","tEnc","tDec","precompute","_tables","j","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","_length","_i","AsyncStream","possibleConstructorReturn","jobs","delay","timeout_","inherits","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","done","STEP","asyncStream_","decryptChunk_","padded","history","createLogger","logByType","level","lvl","levels","lvlRegExp","unshift","LogByTypeFactory","subname","all","debug","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","$$","Dom","freeze","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","FakeWeakMap","createStyleElement","setTextContent","styleSheet","cssText","WeakMap","vdata","performance","now","access","EVENT_MAP","Events","uid","bound","throttle","last","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","every","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","setState","stateUpdates","changes","from","to","w","player_","parentComponent_","options_","id_","SetSham","name_","el_","children_","childIndex_","childNameIndex_","Set","set_","_proto2","thisArg","setTimeoutIds_","setIntervalIds_","rafIds_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","supportsRaf_","cancelAnimationFrame","_this4","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","Boolean","browserApi","USER_AGENT","navigator","userAgent","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","FullscreenApi","prefixed","apiMap","specApi","errorTypes","1","2","3","4","5","errNum","trackToJson_","textTrackConverter","trackEls","trackObjs","trackEl","textTracks","addedTrack","addRemoteTextTrack","addCue","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","MODAL_CLASS_NAME","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","fillAlways","fill","wasPlaying_","pauseOnOpen","hadControls_","conditionalFocus_","opened","close","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","keycode","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","href","addToBody","host","protocol","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","errors","groupCollapsed","groupEnd","TextTrack","_Track","srclang","default_","tech_","activeCues_","activeCues","changed","timeupdateHandler","newMode","loaded_","ct","active","crossOrigin","XHR","responseBody","loadTrack","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","load","NONE","LOADING","LOADED","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","vtt","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","allowedGetters","seekable","allowedSetters","setVolume","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","oga","m3u8","jpg","jpeg","gif","png","svg","webp","ext","MediaLoader","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleMouseOver","handleMouseOut","_ClickableComponent","PosterImage","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","userPref","cache_","selectedLanguage","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","gm","gh","Infinity","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","progress","getPercent","toFixed","sizeKey","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","MenuButton","buttonClass","menu","handleMenuKeyUp","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","currentRate","newRate","playbackRateSupported","Spacer","_Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","Number","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","immediate","debounced","_later","cancel","debounce","resizeHandler","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement_","trackLive_","pastSeekEnd_","arr","mid","sortedList","newSeekEnd","lastSeekEnd_","seekableIncrementList_","sort","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","hasStarted","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","doubleClick","userWasActive","toggleFullscreenClass_","isFs","fullscreenElement","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","inactivityTimeout","defaultPlaybackRate","reduceRight","_this8","resolve","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fullscreenOptions","fsOptions","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","isContentEditable","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","_hotkeys$muteKey","muteKey","keydownEvent","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","safeParseTuple","childName","html5","flash","userLanguage","navigationUI","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","resolveUrl","baseURL","relativeURL","URLToolkit","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","req","responseURL","classCallCheck","slicedToArray","Symbol","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","log$1","forEachMediaGroup","master","mediaType","groupKey","labelKey","updateMaster","mergedPlaylist","updateSegments","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","PlaylistLoader","srcUrl","hls","getPrototypeOf","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","customParser","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","isFinalRendition","mediaChange","started","intervalDuration","endSequence","expired","backward","forward","backwardDuration","forwardDuration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","scale","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","segmentXhrHeaders","Range","textRange","range","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","initSegment","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","offsetFromSegmentStart","transmuxerPrependedSeconds","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","results","findRange","TIME_FUDGE_FACTOR","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","webkitURL","msURL","testWorker","testArray","TransmuxWorker","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","pasp","payload","setUint32","audioobjecttype","samplingfrequencyindex","trackFragments","avc1Box","sequenceParameterSets","pictureParameterSets","profileIdc","levelIdc","sarRatio","hSpacing","vSpacing","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","keyFrame","frameUtils","nalUnits","currentNal","nalCount","nalUnitType","currentGop","gops","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","timelineStartPts","keepOriginalTimestamps","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","ONE_SECOND_IN_TS$1","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","format","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","tagSize","dispatchType","frameStart","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","packetsWaitingForPmt","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","processPes_","STREAM_TYPES","h264","adts","timedMetadata","stream$$1","forceFlush","packetFlushable","fragment","packetData","packetLength","codec","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES","handlePartialSegments","frameNum","frameEnd","oldBuffer","adtsFrameDuration","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","len","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","newLength","newData","emulationPreventionBytesPositions","sourceIndex","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","header","returnSize","setTimestamp","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","ONE_SECOND_IN_TS$3","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remuxTracks","remux","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","MessageHandlers","transmuxer$$1","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","wireTransmuxerEvents","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","AUDIO","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","presentation","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","pair","parseContentType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","generateSidxKey","sidxInfo","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","requestSidx_","sidxRange","finishProcessingFn","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","doneFn","mp4Inspector","sidxMapping","sidxKey","sidxRequestFinished_","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","haveMaster_","masterLoaded_","date","syncClientServerClock_","onClientServerClockSync_","utcTiming","parseUTCTiming","serverTime","parseMasterXml","hasPendingRequest","masterXml","mediaGroupSidx","filterChangedSidxMappings","updatedMaster","mediaUri","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","disposeFn","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","keyBytes","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","isInitialized","timescales","mp4probe","videoTrackIds","handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","detectEndOfStream","segmentIndex","finite","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","CaptionParser","decrypter_","syncController_","syncController","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","storedKey","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","clearAllCaptions","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","segmentKey","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","clearParsedCaptions","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","segmentTimestampInfo","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","loadHandler","errorHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","MPEGTS","LOCAL","mapData","segmentData","mappingObj","diff","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","tsInspector","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onError","mediaTypes","blacklistCurrentPlaylist","segmentLoaders","activeTrack","activeGroup","defaultTrack","onTrackChanged","SUBTITLES","setupListeners","requestOptions","initialize","_settings$mediaTypes$","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback","findBox","getVideoTrackIds","getTracks","trafs","baseTimes","traks","hdlrs","tkhds","codecConfig","codecBox","subresults","parseSei","parseUserData","parseCaptionPackets","USER_DATA_REGISTERED_ITU_T_T35","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","segmentCache","parsedCaptions","parsingPartial","isPartial","isNewInit","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","resetCaptionStream","g","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","baseURLPath","newPath","lastIndexOf","parts","cea708Parser","char","merge","objects","flatten","lists","urlToolkit","createCommonjsModule","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","startRange","endRange","segmentRange","static","_attributes$timescale","sourceDuration","dynamic","_attributes$timescale2","_attributes$start","_attributes$minimumUp","_attributes$timeShift","timeShiftBufferDepth","NOW","periodStartWC","availabilityStartTime","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$type","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","_attributes$startNumb","startNumber","periodIndex","toSegments","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","sourceURL","segmentTimeInfo","addSegmentsToPlaylist","sidxByteRange","sidxEnd","mediaReferences","mergeDiscontiguousPlaylists","_acc$name$segments","addSegmentInfoFromSidx","sidxMatch","formatAudioPlaylist","_attributes","formatVideoPlaylist","_ref3","_attributes3","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","VIDEO","mainPlaylist","formattedPlaylists","organizeAudioPlaylists","subs","_attributes2","organizeVttPlaylists","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","S","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","template","base","segmentsInfo","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","psshNode","psshBuffer","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","UTCTimingNode","parseUTCTimingScheme"],"mappings":"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","file":"route-home.chunk.393a0.js","sourcesContent":["import { Component } from \"preact\";\nimport style from \"./style\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\n\nconst videoJsOptions = {\n  autoplay: true,\n  controls: true,\n  sources: [],\n  playbackRates: [0.5, 1, 1.5, 2],\n  userActions: {\n    hotkeys(event) {\n      // `this` is the player in this context\n\n      // `k || K || space` key = start/pause\n      if (event.which === 75 || event.which === 32) {\n        if (this.paused()) {\n          this.play();\n        } else {\n          this.pause();\n        }\n      }\n\n      if (!this.duration()) {\n        return; // No video loaded.\n      }\n      // `l || L || right arrow` key = fast-forward 15 seconds\n      if (event.which === 76 || event.which === 39) {\n        const currentTime = this.currentTime();\n        const duration = this.duration();\n        const lastDuration = Math.floor(duration - currentTime);\n        if (lastDuration > 15) {\n          this.currentTime(currentTime + 15);\n        } else {\n          this.currentTime(currentTime + lastDuration);\n        }\n      }\n\n      // `j || J || left arrow` key = back-forward 15 seconds\n      if (event.which === 74 || event.which === 37) {\n        const currentTime = this.currentTime();\n        if (Math.floor(currentTime) > 15) {\n          this.currentTime(currentTime - 15);\n        } else {\n          this.currentTime(currentTime - Math.floor(currentTime));\n        }\n      }\n\n      // up arrow key = higher volume\n      if (event.which === 38 && this.volume() < 1) {\n        this.volume((this.volume() * 10 + 1) / 10);\n      }\n\n      // down arrow key = lower volume\n      if (event.which === 40 && this.volume() > 0) {\n        this.volume((this.volume() * 10 - 1) / 10);\n      }\n    }\n  }\n};\n\nclass Home extends Component {\n  videoRef = null;\n\n  componentDidMount() {\n    this.player = videojs(\n      this.videoRef,\n      { ...videoJsOptions },\n      function onPlayerReady() {\n        console.log(\"onPlayerReady\", this);\n      }\n    );\n\n    if (this.props.observer) {\n      this.props.observer.observe(document.querySelector(\"#vjs_video_3\"), {\n        attributes: true,\n        attributeFilter: [\"class\"]\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.player.src({\n      src: this.props.objectURL,\n      type: this.props.type\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    return (\n      <div\n        data-vjs-player\n        class={style}\n        style={{ width: \"100%\", height: \"100%\" }}\n      >\n        <video\n          ref={ref => (this.videoRef = ref)}\n          className=\"video-js\"\n          disablePictureInPicture\n        >\n          <track kind=\"subtitles\" id=\"subtitles\" default />\n        </video>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nvar toHexString = function(value) {\n  return ('00' + value.toString(16)).slice(-2);\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned,\n  toHexString: toHexString\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  this.on('partialdone', function(flushSource) {\n    destination.partialFlush(flushSource);\n  });\n\n  this.on('endedtimeline', function(flushSource) {\n    destination.endTimeline(flushSource);\n  });\n\n  this.on('reset', function(flushSource) {\n    destination.reset(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nStream.prototype.partialFlush = function(flushSource) {\n  this.trigger('partialdone', flushSource);\n};\n\nStream.prototype.endTimeline = function(flushSource) {\n  this.trigger('endedtimeline', flushSource);\n};\n\nStream.prototype.reset = function(flushSource) {\n  this.trigger('reset', flushSource);\n};\n\nmodule.exports = Stream;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","var trim = function(string) {\n  return string.replace(/^\\s+|\\s+$/g, '');\n}\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  var headersArr = trim(headers).split('\\n')\n\n  for (var i = 0; i < headersArr.length; i++) {\n    var row = headersArr[i]\n    var index = row.indexOf(':')\n    , key = trim(row.slice(0, index)).toLowerCase()\n    , value = trim(row.slice(index + 1))\n\n    if (typeof(result[key]) === 'undefined') {\n      result[key] = value\n    } else if (isArray(result[key])) {\n      result[key].push(value)\n    } else {\n      result[key] = [ result[key], value ]\n    }\n  }\n\n  return result\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar TYPE_SHARED = 'shared';\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  // The \"shared\" type is used in cases where a stream will contain muxed\n  // video and audio. We could use `undefined` here, but having a string\n  // makes debugging a little clearer.\n  this.type_ = type || TYPE_SHARED;\n\n  this.push = function(data) {\n\n    // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n    // streams will only accept data that matches their type.\n    if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.endTimeline = function() {\n    this.flush();\n    this.trigger('endedtimeline');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n  this.reset = function() {\n    this.discontinuity();\n    this.trigger('reset');\n  };\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\nvar ONE_SECOND_IN_TS = require('../utils/clock').ONE_SECOND_IN_TS;\n\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    var firstKeyFrame = probe.ts.parsePesTime(frame);\n\n                    // PTS/DTS may not be available. Simply *not* setting\n                    // the keyframe seems to work fine with HLS playback\n                    // and definitely preferable to a crash with TypeError...\n                    if (firstKeyFrame) {\n                      result.firstKeyFrame = firstKeyFrame;\n                      result.firstKeyFrame.type = 'video';\n                    } else {\n                      // eslint-disable-next-line\n                      console.warn(\n                        'Failed to extract PTS/DTS from PES at first keyframe. ' +\n                        'This could be an unusual TS segment, or else mux.js did not ' +\n                        'parse your TS segment correctly. If you know your TS ' +\n                        'segments do contain PTS/DTS on keyframes please file a bug ' +\n                        'report! You can try ffprobe to double check for yourself.'\n                      );\n                    }\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n      info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n      info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n      frame.ptsTime = frame.dts / ONE_SECOND_IN_TS;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/*! @name m3u8-parser @version 4.4.0 @license Apache-2.0 */\nimport window from 'global/window';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text || '');\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = {\n                  'com.widevine.alpha': {\n                    attributes: {\n                      schemeIdUri: entry.attributes.KEYFORMAT,\n                      // remove '0x' from the key id string\n                      keyId: entry.attributes.KEYID.substring(2)\n                    },\n                    // decode the base64-encoded PSSH box\n                    pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                  }\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };\n","/**\n * @license\n * Video.js 7.6.6 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport CaptionParser from 'mux.js/lib/mp4/caption-parser';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.6.6\";\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue = window$1.getComputedStyle(el);\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap =\n  /*#__PURE__*/\n  function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n};\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    var SetSham;\n\n    if (!window$1.Set) {\n      SetSham =\n      /*#__PURE__*/\n      function () {\n        function SetSham() {\n          this.set_ = {};\n        }\n\n        var _proto2 = SetSham.prototype;\n\n        _proto2.has = function has(key) {\n          return key in this.set_;\n        };\n\n        _proto2[\"delete\"] = function _delete(key) {\n          var has = this.has(key);\n          delete this.set_[key];\n          return has;\n        };\n\n        _proto2.add = function add(key) {\n          this.set_[key] = 1;\n          return this;\n        };\n\n        _proto2.forEach = function forEach(callback, thisArg) {\n          for (var key in this.set_) {\n            callback.call(thisArg, key, key, this);\n          }\n        };\n\n        return SetSham;\n      }();\n    }\n\n    this.setTimeoutIds_ = window$1.Set ? new Set() : new SetSham();\n    this.setIntervalIds_ = window$1.Set ? new Set() : new SetSham();\n    this.rafIds_ = window$1.Set ? new Set() : new SetSham();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      if (DomData.has(this.el_)) {\n        DomData[\"delete\"](this.el_);\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this2.setTimeoutIds_.has(timeoutId)) {\n        _this2.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this3 = this;\n\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this3.rafIds_.has(id)) {\n        _this3.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this4 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1];\n\n        _this4[idName].forEach(_this4[cancelName], _this4);\n      });\n      _this4.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_this));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver);\n    this.off('mouseout', this.handleMouseOut);\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_this), _this.updateContent), UPDATE_REFRESH_INTERVAL);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    var sizeKey = this.vertical() ? 'height' : 'width';\n\n    if (style[sizeKey] !== percentage) {\n      style[sizeKey] = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL$1 = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL$1);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL$1);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    _this.on(_this.muteToggle, 'keyup', _this.handleKeyPress);\n\n    _this.on(_this.volumeControl, 'keyup', _this.handleVolumeControlKeyUp);\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    _this.on('mouseover', _this.handleMouseOver);\n\n    _this.on('mouseout', _this.handleMouseOut); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', bind(_assertThisInitialized(_this), _this.handleMenuKeyUp));\n    });\n\n    _this.on('mouseleave', _this.handleMouseLeave);\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleMenuKeyUp));\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * Computes the median of an array.\n *\n * @param {number[]} arr\n *        Input array of numbers.\n *\n * @return {number}\n *        Median value.\n */\nvar median = function median(arr) {\n  var mid = Math.floor(arr.length / 2);\n  var sortedList = [].concat(arr).sort(function (a, b) {\n    return a - b;\n  });\n  return arr.length % 2 !== 0 ? sortedList[mid] : (sortedList[mid - 1] + sortedList[mid]) / 2;\n};\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = this.seekableIncrement_ * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        // we try to get the best fit value for the seeking increment\n        // variable from the last 12 values.\n        this.seekableIncrementList_ = this.seekableIncrementList_.slice(-11);\n        this.seekableIncrementList_.push(Math.abs(newSeekEnd - this.lastSeekEnd_));\n\n        if (this.seekableIncrementList_.length > 3) {\n          this.seekableIncrement_ = median(this.seekableIncrementList_);\n        }\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.seekableIncrementList_ = [];\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this6.techGet('currentSrc');\n\n          _this6.lastSource_.tech = techSrc;\n\n          _this6.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (this.fsApi_.prefixed) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var fsOptions;\n    this.isFullscreen(true);\n\n    if (this.fsApi_.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_); // only pass FullscreenOptions to requestFullscreen if it isn't prefixed\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      silencePromise(this.el_[this.fsApi_.requestFullscreen](fsOptions));\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (this.fsApi_.requestFullscreen) {\n      silencePromise(document[this.fsApi_.exitFullscreen]());\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.message && err.message === this.localize(this.options_.notSupportedMessage)) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.10.6\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n          frameNum++; // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          } // Remove the finished frame from the buffer and start the process again\n\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$3 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          this.trigger('timingInfo', {\n            start: frames[0].dts,\n            end: frames[0].dts + frames.length * frameDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].dts,\n          end: gops[gops.length - 1].dts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer$$1) {\n      transmuxer$$1.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer$$1.captionStream) {\n        transmuxer$$1.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer$$1.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer$$1.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer$$1.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new transmuxer.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      if (!this.pendingBuffers_.length) {\n        // We are no longer in the internal \"updating\" state\n        this.trigger('updateend');\n        this.bufferUpdating_ = false;\n        return;\n      } // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        var currentSidxInfo = _this8.media().sidx;\n\n        if (updatedMaster) {\n          if (currentSidxInfo) {\n            var sidxKey = generateSidxKey(currentSidxInfo); // the sidx was updated, so the previous mapping was removed\n\n            if (!_this8.sidxMapping_[sidxKey]) {\n              var playlist = _this8.media();\n\n              _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n                handleManifestRedirects: _this8.handleManifestRedirects\n              }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n                if (!newMaster || !sidx) {\n                  throw new Error('failed to request sidx on minimumUpdatePeriod');\n                } // update loader's sidxMapping with parsed sidx box\n\n\n                _this8.sidxMapping_[sidxKey].sidx = sidx;\n                _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                  _this8.trigger('minimumUpdatePeriod');\n                }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n                _this8.refreshMedia_(_this8.media().uri);\n\n                return;\n              }));\n            }\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n        startOfSegment = lastBufferedEnd;\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        // Subtract any difference between the PTS and DTS times of the first frame\n        // from the timeStampOffset (which currently equals the buffered.end) to prevent\n        // creating any gaps in the buffer\n        if (timingInfo && timingInfo.segmentTimestampInfo) {\n          var ptsStartTime = timingInfo.segmentTimestampInfo[0].ptsTime;\n          var dtsStartTime = timingInfo.segmentTimestampInfo[0].dtsTime;\n          segmentInfo.timestampOffset -= ptsStartTime - dtsStartTime;\n        }\n\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n      var segmentTimestampInfo = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n        segmentTimestampInfo = timeInfo.video;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n        segmentTimestampInfo = timeInfo.audio;\n      }\n\n      var probedInfo = {\n        segmentTimestampInfo: segmentTimestampInfo,\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.10.6\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar toHexString = require('../utils/bin').toHexString;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds, getTracks;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\n/**\n * Get all the video, audio, and hint tracks from a non fragmented\n * mp4 segment\n */\ngetTracks = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var tracks = [];\n\n  traks.forEach(function(trak) {\n    var track = {};\n    var tkhd = findBox(trak, ['tkhd'])[0];\n    var view, version;\n\n    // id\n    if (tkhd) {\n      view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      version = view.getUint8(0);\n\n      track.id = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var hdlr = findBox(trak, ['mdia', 'hdlr'])[0];\n\n    // type\n    if (hdlr) {\n      var type = parseType(hdlr.subarray(8, 12));\n\n      if (type === 'vide') {\n        track.type = 'video';\n      } else if (type === 'soun') {\n        track.type = 'audio';\n      } else {\n        track.type = type;\n      }\n    }\n\n\n    // codec\n    var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n    if (stsd) {\n      var sampleDescriptions = stsd.subarray(8);\n      // gives the codec type string\n      track.codec = parseType(sampleDescriptions.subarray(4, 8));\n\n      var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n      var codecConfig, codecConfigType;\n\n      if (codecBox) {\n        // https://tools.ietf.org/html/rfc6381#section-3.3\n        if ((/^[a-z]vc[1-9]$/i).test(track.codec)) {\n          // we don't need anything but the \"config\" parameter of the\n          // avc1 codecBox\n          codecConfig = codecBox.subarray(78);\n          codecConfigType = parseType(codecConfig.subarray(4, 8));\n\n          if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n            track.codec += '.';\n\n            // left padded with zeroes for single digit hex\n            // profile idc\n            track.codec +=  toHexString(codecConfig[9]);\n            // the byte containing the constraint_set flags\n            track.codec += toHexString(codecConfig[10]);\n            // level idc\n            track.codec += toHexString(codecConfig[11]);\n          } else {\n            // TODO: show a warning that we couldn't parse the codec\n            // and are using the default\n            track.codec = 'avc1.4d400d';\n          }\n        } else if ((/^mp4[a,v]$/i).test(track.codec)) {\n          // we do not need anything but the streamDescriptor of the mp4a codecBox\n          codecConfig = codecBox.subarray(28);\n          codecConfigType = parseType(codecConfig.subarray(4, 8));\n\n          if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n            track.codec += '.' + toHexString(codecConfig[19]);\n            // this value is only a single digit\n            track.codec += '.' + toHexString((codecConfig[20] >>> 2) & 0x3f).replace(/^0/, '');\n          } else {\n            // TODO: show a warning that we couldn't parse the codec\n            // and are using the default\n            track.codec = 'mp4a.40.2';\n          }\n        } else {\n          // TODO: show a warning? for unknown codec type\n        }\n      }\n    }\n\n    var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n\n    if (mdhd && tkhd) {\n      var index = version === 0 ? 12 : 20;\n\n      track.timescale = toUnsigned(mdhd[index]     << 24 |\n                                   mdhd[index + 1] << 16 |\n                                   mdhd[index + 2] <<  8 |\n                                   mdhd[index + 3]);\n    }\n\n    tracks.push(track);\n  });\n\n  return tracks;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds,\n  tracks: getTracks\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n  if (trackId === null) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n  // Stores whether we are receiving partial data or not\n  var parsingPartial;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function(options) {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n    parsingPartial = options ? options.isPartial : false;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one.\n    // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n    } else if (trackId === null || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    if (!parsingPartial) {\n      captionStream.flush();\n    } else {\n      captionStream.partialFlush();\n    }\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flushCCStreams = function(flushType) {\n  this.ccStreams_.forEach(function(cc) {\n    return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n  }, this);\n};\n\nCaptionStream.prototype.flushStream = function(flushType) {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.flushCCStreams(flushType);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.flushCCStreams(flushType);\n};\n\nCaptionStream.prototype.flush = function() {\n  return this.flushStream('flush');\n};\n\n// Only called if handling partial data\nCaptionStream.prototype.partialFlush = function() {\n  return this.flushStream('partialFlush');\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\n// From the CEA-608 spec:\n/*\n * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n * to switch to captioning or Text.\n*/\n// With that in mind, we ignore any data between an XDS control code and a\n// subsequent closed-captioning control code.\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsTextOrXDSActive(packet)) {\n    this.activeCea608Channel_[packet.type] = null;\n  } else if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, or the\n    // packets are Text/XDS data, discard the data; we don't want jumbled\n    // captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\nCaptionStream.prototype.setsTextOrXDSActive = function(packet) {\n  return ((packet.ccData & 0x7100) === 0x0100) ||\n    ((packet.ccData & 0x78fe) === 0x102a) ||\n    ((packet.ccData & 0x78fe) === 0x182a);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n","/*! @name mpd-parser @version 0.8.1 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.8.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n    segment.byterange = {\n      length: endRange - startRange + 1,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange = byterange.offset + byterange.length - 1;\n  return byterange.offset + \"-\" + endRange;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nvar addSegmentsToPlaylist = function addSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial master manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = []; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex = sidxEnd + sidx.firstOffset;\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = startIndex + size - 1;\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      // this is used in parseByDuration\n      periodIndex: timeline,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n    startIndex += size;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      if (playlist.segments[0]) {\n        playlist.segments[0].discontinuity = true;\n      }\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSegmentInfoFromSidx = function addSegmentInfoFromSidx(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    var playlist = playlists[i];\n\n    if (!playlist.sidx) {\n      continue;\n    }\n\n    var sidxKey = playlist.sidx.uri + '-' + byteRangeToString(playlist.sidx.byterange);\n    var sidxMatch = sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (playlist.sidx && sidxMatch) {\n      addSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n  }\n\n  return playlists;\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: addSegmentInfoFromSidx([formatAudioPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: addSegmentInfoFromSidx([formatVttPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists, sidxMapping) {\n  var _mediaGroups;\n\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSegmentInfoFromSidx(videoPlaylists, sidxMapping),\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n  }\n\n  return master;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)), options.sidxMapping);\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n"],"sourceRoot":""}